{
  "name": "svn-scm",
  "displayName": "SVN",
  "description": "Integrated Subversion source control",
  "version": "1.8.0",
  "publisher": "johnstoncode",
  "engines": {
    "vscode": "^1.17.0"
  },
  "icon": "images/subversion.png",
  "homepage": "https://github.com/JohnstonCode/svn-scm/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/JohnstonCode/svn-scm.git"
  },
  "bugs": {
    "url": "https://github.com/JohnstonCode/svn-scm/issues"
  },
  "categories": ["Other", "SCM Providers"],
  "keywords": ["multi-root ready", "scm", "svn"],
  "activationEvents": ["*"],
  "main": "./out/extension",
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "node ./node_modules/vscode/bin/test",
    "prettier": "prettier --no-config --list-different 'src/**/*.ts'"
  },
  "dependencies": {
    "@types/xml2js": "^0.4.2",
    "iconv-lite": "^0.4.19",
    "jschardet": "^1.6.0",
    "micromatch": "^3.1.5",
    "xml2js": "^0.4.19"
  },
  "devDependencies": {
    "@types/glob": "^5.0.33",
    "@types/micromatch": "^3.1.0",
    "@types/mocha": "^2.2.42",
    "@types/node": "^9.3.0",
    "decache": "^4.3.0",
    "eslint": "^4.12.1",
    "glob": "^7.1.2",
    "istanbul": "^0.4.5",
    "mocha": "^5.0.0",
    "prettier": "^1.9.0",
    "remap-istanbul": "^0.10.0",
    "typescript": "^2.6.2",
    "vscode": "^1.1.10"
  },
  "contributes": {
    "commands": [
      {
        "command": "svn.add",
        "title": "Add",
        "category": "SVN",
        "icon": {
          "light": "icons/light/add.svg",
          "dark": "icons/dark/add.svg"
        }
      },
      {
        "command": "svn.addChangelist",
        "title": "Add to a changelist",
        "category": "SVN",
        "icon": {
          "light": "icons/light/add.svg",
          "dark": "icons/dark/add.svg"
        }
      },
      {
        "command": "svn.removeChangelist",
        "title": "Remove from changelist",
        "category": "SVN",
        "icon": {
          "light": "icons/light/remove.svg",
          "dark": "icons/dark/remove.svg"
        }
      },
      {
        "command": "svn.commit",
        "title": "Commit Selected",
        "category": "SVN"
      },
      {
        "command": "svn.openDiffHead",
        "title": "Diff Changes HEAD",
        "category": "SVN"
      },
      {
        "command": "svn.refresh",
        "title": "Refresh",
        "category": "SVN",
        "icon": {
          "light": "icons/light/refresh.svg",
          "dark": "icons/dark/refresh.svg"
        }
      },
      {
        "command": "svn.switchBranch",
        "title": "Switch Branch",
        "category": "SVN"
      },
      {
        "command": "svn.revert",
        "title": "Revert Selected",
        "category": "SVN"
      },
      {
        "command": "svn.update",
        "title": "Svn update",
        "category": "SVN"
      },
      {
        "command": "svn.patch",
        "title": "Svn patch",
        "category": "SVN"
      },
      {
        "command": "svn.remove",
        "title": "Remove Selected",
        "category": "SVN"
      }
    ],
    "menus": {
      "commandPalette": [],
      "scm/title": [
        {
          "command": "svn.refresh",
          "group": "navigation",
          "when": "scmProvider == svn"
        },
        {
          "command": "svn.switchBranch",
          "when": "config.svn.enabled"
        },
        {
          "command": "svn.update",
          "when": "config.svn.enabled"
        },
        {
          "command": "svn.patch",
          "when": "config.svn.enabled"
        }
      ],
      "scm/resourceGroup/context": [],
      "scm/resourceState/context": [
        {
          "command": "svn.add",
          "when":
            "config.svn.enabled && scmProvider == svn && scmResourceGroup == unversioned",
          "group": "inline"
        },
        {
          "command": "svn.add",
          "when":
            "config.svn.enabled && scmProvider == svn && scmResourceGroup == unversioned",
          "group": "1_modification"
        },
        {
          "command": "svn.addChangelist",
          "when":
            "config.svn.enabled && scmProvider == svn && scmResourceGroup != external",
          "group": "inline"
        },
        {
          "command": "svn.addChangelist",
          "when":
            "config.svn.enabled && scmProvider == svn && scmResourceGroup != external",
          "group": "1_modification"
        },
        {
          "command": "svn.removeChangelist",
          "when":
            "config.svn.enabled && scmProvider == svn && scmResourceGroup != changes && scmResourceGroup != unversioned && scmResourceGroup != external",
          "group": "inline"
        },
        {
          "command": "svn.removeChangelist",
          "when":
            "config.svn.enabled && scmProvider == svn && scmResourceGroup != changes && scmResourceGroup != unversioned && scmResourceGroup != external",
          "group": "1_modification"
        },
        {
          "command": "svn.commit",
          "when": "scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external",
          "group": "1_modification"
        },
        {
          "command": "svn.openDiffHead",
          "when": "scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external",
          "group": "navigation"
        },
        {
          "command": "svn.revert",
          "when": "scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external",
          "group": "1_modification"
        },
        {
          "command": "svn.remove",
          "when": "scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external",
          "group": "2_modification"
        }
      ],
      "editor/title": []
    },
    "configuration": {
      "title": "Svn",
      "properties": {
        "svn.enabled": {
          "type": "boolean",
          "description": "Whether svn is enabled",
          "default": true
        },
        "svn.path": {
          "type": ["string", "null"],
          "description": "Path to the svn executable",
          "default": null,
          "isExecutable": true
        },
        "svn.diff.withHead": {
          "type": "boolean",
          "description":
            "Show diff changes using latest revision in the repository. Set false to use latest revision in local folder",
          "default": true
        },
        "svn.layout.trunk": {
          "type": ["string", "null"],
          "description":
            "Relative path for 'trunk' in SVN URL, 'null' to disable. (Ex.: 'trunk', 'main')",
          "default": "trunk"
        },
        "svn.layout.branches": {
          "type": ["string", "null"],
          "description":
            "Relative path for 'branches' in SVN URL, 'null' to disable. (Ex.: 'branches', 'versions')",
          "default": "branches"
        },
        "svn.layout.tags": {
          "type": ["string", "null"],
          "description":
            "Relative path for 'tags' in SVN URL, 'null' to disable. (Ex.: 'tags', 'stamps')",
          "default": "tags"
        },
        "svn.multipleFolders.enabled": {
          "type": "boolean",
          "description": "Allow to find subfolders using SVN",
          "default": false
        },
        "svn.multipleFolders.depth": {
          "type": "number",
          "minimum": 0,
          "description": "Maximum depth to find subfolders using SVN",
          "default": 4
        },
        "svn.multipleFolders.ignore": {
          "type": "array",
          "minimum": 4,
          "description": "Folders to ignore using SVN",
          "default": ["**/.git", "**/.hg", "**/vendor", "**/node_modules"]
        },
        "svn.sourceControl.showExternal": {
          "type": "boolean",
          "description":
            "Allow to show in source control the list the external folders",
          "default": false
        }
      }
    }
  }
}
